Todo: KLineEd
=============

Development work v1.0.43.0
--------------------------

1. done - Change filetype from .txt to .ksx

2. Implement command line parameters/args and settings
     --parabreak char=' '
	 --rulers display=on|off backgnd=black foregnd=darkgreen sepchar='.'
     --BrowserName "explorer.exe" - was ParamBrowser, --browser
	    --Help 
		--Search https://www.google.com/ args search {word}
		--Thesaurus  https://www.thesaurus.com/ args /browse/{word}
		--Spell https://www.spell.com args search {word}
     --ErrorReporting on | off
     --CursorSize 20
	 --TypingPauseSecs 60
	 --TabSize 3
	 --DisplayLineWidth 80
	 --Backgnd text black (msg-error red) (msg-warn black) (msg-note black) (cmds black) (status black) - was  ParamBackGndColour
	 --Foregnd text green (msg-error black) (msg-warn yellow) (msg-note green) (cmds grey) (status grey) - was ParamForeGndColour
	 --export filename.txt 
	 --import filename.txt
	 --fix filename.ksx - removes any errors in the file that stop it being opened
	 --autosave CR | ParaBreak | off - was ParamSpellCheckMode, spellcheck
	 --scrollback 0-n (0 is off, n is any number less than the number of lines) - was DisplayLastLines, scrollreview, ParamScrollReviewMode
	 --editback 0-n (0 is off, n is any number less than the number of lines) - was editline (min current line) ParamEditLineMode
	 --autocorrect on | off
	 --audiovol 1 (0-9)
	 --audiofilecr"; //bell.mpeg 2
	 --audiofilekey"; //click.mpeg 4
	 --audiofilestart"; //insertpaper.mpeg 4
	 --audiofileend"; //removepaper.mpeg 4
	 --SVNUsername wills
	 --SVNPassword [secret manager]
	 --SVNUrlRoot [https//me.svnrepository.com]

3. Implement Import and Export
	 --export create .txt file and copy body.TextLines; add CRLF at the end of each line; replace ParaBreak with double CRLF 
	 --import create new .KSX file and read into body.TextLines; replace double CRLF with ParaBreak and remove any remaining CRLF

4. General improvements
    - clear entire window after abend or reset
	- Detect any change in the Command Window Size and restore 
	- Autosave and manual save
	- Implement --fix filename.ksx
	- Implement view help - help for a particular view
	- Implement search - pass word at cursor
	- Implement thesaurus - pass word at cursor
	- Implement spelling checking - pass word at cursor (but don't implement autocorrect)
	- Implement max scroll back - maximum number of lines that the user can scroll back from end of chapter (Home, PgUp, up)
	- Implement max edit back - maximum number of lines that the user can edit from end of chapter
	- Check Chapter/Session stats are correct

6. Publish and Test
	- Windows
	- iOS

7. Create pre-release ZIP for GitHub

Development work v1.0.44.0
--------------------------

1. Refactor Application structure
	- Rename KLineEdCmdApp Project, KLineEditor.cs and KLineEdCmdApp.json to KScribeCmdApp, KScribeEditor.cs, KScribe.json
	- Rename KLineEdCmdAppTest to KScribeCmdAppTest (KLineEditorTests) 
	- Create KScribeLib Class Library 
		- Move Controller, Model, Utils, View from KScribeCmdApp (not Terminal.cs)
		- Integrate KScribeLib Class Library with KScribeCmdApp - Program.cs, KScribeEditor, Terminal.cs.
	- Create KScribeLibTest and move all existing tests except those relating to Program, KScribeEditor

2. Build and test with VS2019

Development work v1.0.45.0
--------------------------

1. Implement ModalDlgView - a modal dialog box

2. Add to KScribeCmdApp UIElements.cs
	- text box
	- radio button selection
	- check box selection
	- drop down list selection

3. Test UIElements.cs
    - Unit test
	- Modal Dialog box

4. Refactor
	- Move to MxDotNetUtils general MVC and factory stuff as well as Terminal.cs, ITerminal.cs and UIElements.cs 
    - Update KScribe for new version of MxDotNetUtils

Development work v1.0.46.0
--------------------------

1. Implement Secret Manager for json settings (SVN)

2. Refactor
    - Update KScribe for new version of MxReturnCode (C++ interop)

Development work v1.0.47.0
--------------------------

1. Implement SettingsView - allow command line parameters to be changed from within the Editor

2. Implement Abort - exit without saving unsaved changes
	ModalDlgView - abort y/n?

3. Implement Undo (Ctrl+Z)

4. Implement two line error messages

5. Improve warning messages - use of modal dialog, better separation of data and user errors

6. Improve unit testing and full test

7. Create Windows/iOS Installer - Wix

Release work v1.1 (first major release)
--------------------------------------

1.  Create Logo
2.	Migrate to GitHub KScribe public project and make existing private
3.  Create GitHub wiki
		- user manual 
			- list of views
			- help on a view
		- technical 
			- architectural overview
				- MVC pattern
				- factory
			- structure of app
4.  Create YouTube video
5.  Create KScribe.org website


Development work v1.1.30.0
--------------------------

WARNING: changes may break iOS version
	
1. Implement autocorrect spelling checking
	- automatically check last word and if not found switch to SpellEditView
		- Ctrl+A - add to dictionary
		- Ctrl+K - review added words since last version of dictionary (del allows removal)
		- 0 - switch back to TextEditView (ignore)
		- 1 ... n - replace with suggested word and switch back to TextEditView
	- see	
		- https://stackoverflow.com/questions/15252596/using-the-c-sharp-nhunspell-how-do-i-check-words
		- https://www.codeproject.com/Articles/5277/NetSpell-Spell-Checker-for-NET
		- https://www.codeproject.com/Articles/4572/Using-Word-s-spellchecker-in-C

2. Implement audio
	- play sound on keypress (read into memory at startup)

3. Implement Clipboard
	- Ctrl+V
	- Ctrl+C
	- Ctrl+X

Release work v1.2
-----------------

1. Store settings in Chapter.ksx to override global settings in KScribe.json
2. Create ConsoleApp launcher for Cmd Line version (Windows only)
3. Create KScribeWinApp - window version
4. Create KScribeMacApp - iOS version
5. Integrate with CVS
		- store user settings
		- create repository (delete from cmd line - intentional difficult)
		- add files
		- put file(s)
		- get file(s)
		- list files
		- list version stats for selected file
		- diff between selected versions
		- restore from selected version
6. Implement Structure Editing - a way of breaking-up a document into sections
	- Command Ctrl+Q toggles between normal text editing (NTE) mode and structure editing (SE) mode
	- Structure Editing commands
		- Ctrl+H+1 - H1 Caps with double underline (=) on last line followed by blank line
		- Ctrl+H+2 - H2 Mixed case with single underline (-) on last line followed by blank line
		- Ctrl+H+3 - H3 Mixed case with no underline, blank line
		- Ctrl+H+4 - H4 Mixed case with no underline, blank line, intent 1 tab 
	    - Ctrl+N toggles display of notes contained in <n>...</n> in SE mode (not shown in NTE)
			- Ctrl+S start note (Ctrl+N followed by <n>)
			- Ctrl+E end note (</n> followed by Ctrl+N)
		- Ctrl+Z 
			- Save contents of line buffer and move previous heading into it, DisplayLastLines
		- Ctrl+B 
			- Save contents of line buffer and move next heading into it, DisplayLastLines
		- Ctrl+Q
			-  Save contents of line buffer and resume NTE in sected section 
7. Implement integration with KScribe.org Learning Features (AI)
	- list misspellings by frequency
	- send list to your account on KScribe (spelling test)
	- list mistypes (S rather than D, etc)
	- send list to your account on KScribe (typing test)
	- export chapter to your account on KScribe for AI grammar analysis, idiom misuse, etc and generate a report (PDF)








			 